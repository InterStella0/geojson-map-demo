(()=>{var t={122:t=>{!function(){var n=this.gju={};function e(t){for(var n=[],e=[],o=0;o<t[0].length;o++)n.push(t[0][o][1]),e.push(t[0][o][0]);return n=n.sort((function(t,n){return t-n})),e=e.sort((function(t,n){return t-n})),[[n[0],e[0]],[n[n.length-1],e[e.length-1]]]}function o(t,n,e){for(var o=[[0,0]],r=0;r<e.length;r++){for(var i=0;i<e[r].length;i++)o.push(e[r][i]);o.push(e[r][0]),o.push([0,0])}var a=!1;for(r=0,i=o.length-1;r<o.length;i=r++)o[r][0]>n!=o[i][0]>n&&t<(o[i][1]-o[r][1])*(n-o[r][0])/(o[i][0]-o[r][0])+o[r][1]&&(a=!a);return a}t.exports&&(t.exports=n),n.lineStringsIntersect=function(t,n){for(var e=[],o=0;o<=t.coordinates.length-2;++o)for(var r=0;r<=n.coordinates.length-2;++r){var i={x:t.coordinates[o][1],y:t.coordinates[o][0]},a={x:t.coordinates[o+1][1],y:t.coordinates[o+1][0]},s={x:n.coordinates[r][1],y:n.coordinates[r][0]},l={x:n.coordinates[r+1][1],y:n.coordinates[r+1][0]},u=(l.y-s.y)*(a.x-i.x)-(l.x-s.x)*(a.y-i.y);if(0!=u){var h=((l.x-s.x)*(i.y-s.y)-(l.y-s.y)*(i.x-s.x))/u,f=((a.x-i.x)*(i.y-s.y)-(a.y-i.y)*(i.x-s.x))/u;0<=h&&h<=1&&0<=f&&f<=1&&e.push({type:"Point",coordinates:[i.x+h*(a.x-i.x),i.y+h*(a.y-i.y)]})}}return 0==e.length&&(e=!1),e},n.pointInBoundingBox=function(t,n){return!(t.coordinates[1]<n[0][0]||t.coordinates[1]>n[1][0]||t.coordinates[0]<n[0][1]||t.coordinates[0]>n[1][1])},n.pointInPolygon=function(t,r){for(var i="Polygon"==r.type?[r.coordinates]:r.coordinates,a=!1,s=0;s<i.length;s++)n.pointInBoundingBox(t,e(i[s]))&&(a=!0);if(!a)return!1;var l=!1;for(s=0;s<i.length;s++)o(t.coordinates[1],t.coordinates[0],i[s])&&(l=!0);return l},n.pointInMultiPolygon=function(t,r){for(var i="MultiPolygon"==r.type?[r.coordinates]:r.coordinates,a=!1,s=!1,l=0;l<i.length;l++){for(var u=i[l],h=0;h<u.length;h++)a||n.pointInBoundingBox(t,e(u[h]))&&(a=!0);if(!a)return!1;for(h=0;h<u.length;h++)s||o(t.coordinates[1],t.coordinates[0],u[h])&&(s=!0)}return s},n.numberToRadius=function(t){return t*Math.PI/180},n.numberToDegree=function(t){return 180*t/Math.PI},n.drawCircle=function(t,e,o){for(var r=[e.coordinates[1],e.coordinates[0]],i=t/1e3/6371,a=[n.numberToRadius(r[0]),n.numberToRadius(r[1])],s=(o=o||15,[[r[0],r[1]]]),l=0;l<o;l++){var u=2*Math.PI*l/o,h=Math.asin(Math.sin(a[0])*Math.cos(i)+Math.cos(a[0])*Math.sin(i)*Math.cos(u)),f=a[1]+Math.atan2(Math.sin(u)*Math.sin(i)*Math.cos(a[0]),Math.cos(i)-Math.sin(a[0])*Math.sin(h));s[l]=[],s[l][1]=n.numberToDegree(h),s[l][0]=n.numberToDegree(f)}return{type:"Polygon",coordinates:[s]}},n.rectangleCentroid=function(t){var n=t.coordinates[0],e=n[0][0],o=n[0][1];return{type:"Point",coordinates:[e+(n[2][0]-e)/2,o+(n[2][1]-o)/2]}},n.pointDistance=function(t,e){var o=t.coordinates[0],r=t.coordinates[1],i=e.coordinates[0],a=e.coordinates[1],s=n.numberToRadius(a-r),l=n.numberToRadius(i-o),u=Math.pow(Math.sin(s/2),2)+Math.cos(n.numberToRadius(r))*Math.cos(n.numberToRadius(a))*Math.pow(Math.sin(l/2),2);return 6371*(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)))*1e3},n.geometryWithinRadius=function(t,e,o){if("Point"==t.type)return n.pointDistance(t,e)<=o;if("LineString"==t.type||"Polygon"==t.type){var r,i={};for(var a in r="Polygon"==t.type?t.coordinates[0]:t.coordinates)if(i.coordinates=r[a],n.pointDistance(i,e)>o)return!1}return!0},n.area=function(t){for(var n=0,e=t.coordinates[0],o=e.length-1,r=0;r<e.length;o=r++){var i={x:e[r][1],y:e[r][0]},a={x:e[o][1],y:e[o][0]};n+=i.x*a.y,n-=i.y*a.x}return n/=2},n.centroid=function(t){for(var e,o=0,r=0,i=t.coordinates[0],a=i.length-1,s=0;s<i.length;a=s++){var l={x:i[s][1],y:i[s][0]},u={x:i[a][1],y:i[a][0]};o+=(l.x+u.x)*(e=l.x*u.y-u.x*l.y),r+=(l.y+u.y)*e}return{type:"Point",coordinates:[r/(e=6*n.area(t)),o/e]}},n.simplify=function(t,n){var e,o,r,i,a,s,l,u,h,f,c,g,d,p,m,v,y,M;n=n||20,t=t.map((function(t){return{lng:t.coordinates[0],lat:t.coordinates[1]}}));var x=Math.PI/180*.5,P=new Array,b=new Array,w=new Array;if(t.length<3)return t;for(e=t.length,h=360*n/(2*Math.PI*6378137),h*=h,r=0,b[0]=0,w[0]=e-1,o=1;o>0;)if(i=b[o-1],a=w[o-1],o--,a-i>1){for(f=t[a].lng()-t[i].lng(),c=t[a].lat()-t[i].lat(),Math.abs(f)>180&&(f=360-Math.abs(f)),g=(f*=Math.cos(x*(t[a].lat()+t[i].lat())))*f+c*c,S=i+1,s=i,u=-1;S<a;S++)d=t[S].lng()-t[i].lng(),p=t[S].lat()-t[i].lat(),Math.abs(d)>180&&(d=360-Math.abs(d)),m=(d*=Math.cos(x*(t[S].lat()+t[i].lat())))*d+p*p,v=t[S].lng()-t[a].lng(),y=t[S].lat()-t[a].lat(),Math.abs(v)>180&&(v=360-Math.abs(v)),(l=m>=g+(M=(v*=Math.cos(x*(t[S].lat()+t[a].lat())))*v+y*y)?M:M>=g+m?m:(d*c-p*f)*(d*c-p*f)/g)>u&&(s=S,u=l);u<h?(P[r]=i,r++):(b[++o-1]=s,w[o-1]=a,b[++o-1]=i,w[o-1]=s)}else P[r]=i,r++;P[r]=e-1,r++;for(var I=new Array,S=0;S<r;S++)I.push(t[P[S]]);return I.map((function(t){return{type:"Point",coordinates:[t.lng,t.lat]}}))},n.destinationPoint=function(t,e,o){o/=6371,e=n.numberToRadius(e);var r=n.numberToRadius(t.coordinates[0]),i=n.numberToRadius(t.coordinates[1]),a=Math.asin(Math.sin(i)*Math.cos(o)+Math.cos(i)*Math.sin(o)*Math.cos(e)),s=r+Math.atan2(Math.sin(e)*Math.sin(o)*Math.cos(i),Math.cos(o)-Math.sin(i)*Math.sin(a));return s=(s+3*Math.PI)%(2*Math.PI)-Math.PI,{type:"Point",coordinates:[n.numberToDegree(s),n.numberToDegree(a)]}}}()}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={exports:{}};return t[o](i,i.exports,e),i.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{"use strict";var t=e(122),n=e.n(t);function o(t,n,e,i){for(var a,s=i,l=e-n>>1,u=e-n,h=t[n],f=t[n+1],c=t[e],g=t[e+1],d=n+3;d<e;d+=3){var p=r(t[d],t[d+1],h,f,c,g);if(p>s)a=d,s=p;else if(p===s){var m=Math.abs(d-l);m<u&&(a=d,u=m)}}s>i&&(a-n>3&&o(t,n,a,i),t[a+2]=s,e-a>3&&o(t,a,e,i))}function r(t,n,e,o,r,i){var a=r-e,s=i-o;if(0!==a||0!==s){var l=((t-e)*a+(n-o)*s)/(a*a+s*s);l>1?(e=r,o=i):l>0&&(e+=a*l,o+=s*l)}return(a=t-e)*a+(s=n-o)*s}function i(t,n,e,o){var r={id:"undefined"===typeof t?null:t,type:n,geometry:e,tags:o,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};return function(t){var n=t.geometry,e=t.type;if("Point"===e||"MultiPoint"===e||"LineString"===e)a(t,n);else if("Polygon"===e||"MultiLineString"===e)for(var o=0;o<n.length;o++)a(t,n[o]);else if("MultiPolygon"===e)for(o=0;o<n.length;o++)for(var r=0;r<n[o].length;r++)a(t,n[o][r])}(r),r}function a(t,n){for(var e=0;e<n.length;e+=3)t.minX=Math.min(t.minX,n[e]),t.minY=Math.min(t.minY,n[e+1]),t.maxX=Math.max(t.maxX,n[e]),t.maxY=Math.max(t.maxY,n[e+1])}function s(t,n,e,o){if(n.geometry){var r=n.geometry.coordinates,a=n.geometry.type,f=Math.pow(e.tolerance/((1<<e.maxZoom)*e.extent),2),c=[],g=n.id;if(e.promoteId?g=n.properties[e.promoteId]:e.generateId&&(g=o||0),"Point"===a)l(r,c);else if("MultiPoint"===a)for(var d=0;d<r.length;d++)l(r[d],c);else if("LineString"===a)u(r,c,f,!1);else if("MultiLineString"===a){if(e.lineMetrics){for(d=0;d<r.length;d++)c=[],u(r[d],c,f,!1),t.push(i(g,"LineString",c,n.properties));return}h(r,c,f,!1)}else if("Polygon"===a)h(r,c,f,!0);else{if("MultiPolygon"!==a){if("GeometryCollection"===a){for(d=0;d<n.geometry.geometries.length;d++)s(t,{id:g,geometry:n.geometry.geometries[d],properties:n.properties},e,o);return}throw new Error("Input data is not a valid GeoJSON object.")}for(d=0;d<r.length;d++){var p=[];h(r[d],p,f,!0),c.push(p)}}t.push(i(g,a,c,n.properties))}}function l(t,n){n.push(f(t[0])),n.push(c(t[1])),n.push(0)}function u(t,n,e,r){for(var i,a,s=0,l=0;l<t.length;l++){var u=f(t[l][0]),h=c(t[l][1]);n.push(u),n.push(h),n.push(0),l>0&&(s+=r?(i*h-u*a)/2:Math.sqrt(Math.pow(u-i,2)+Math.pow(h-a,2))),i=u,a=h}var g=n.length-3;n[2]=1,o(n,0,g,e),n[g+2]=1,n.size=Math.abs(s),n.start=0,n.end=n.size}function h(t,n,e,o){for(var r=0;r<t.length;r++){var i=[];u(t[r],i,e,o),n.push(i)}}function f(t){return t/360+.5}function c(t){var n=Math.sin(t*Math.PI/180),e=.5-.25*Math.log((1+n)/(1-n))/Math.PI;return e<0?0:e>1?1:e}function g(t,n,e,o,r,a,s,l){if(o/=n,a>=(e/=n)&&s<o)return t;if(s<e||a>=o)return null;for(var u=[],h=0;h<t.length;h++){var f=t[h],c=f.geometry,g=f.type,m=0===r?f.minX:f.minY,y=0===r?f.maxX:f.maxY;if(m>=e&&y<o)u.push(f);else if(!(y<e||m>=o)){var M=[];if("Point"===g||"MultiPoint"===g)d(c,M,e,o,r);else if("LineString"===g)p(c,M,e,o,r,!1,l.lineMetrics);else if("MultiLineString"===g)v(c,M,e,o,r,!1);else if("Polygon"===g)v(c,M,e,o,r,!0);else if("MultiPolygon"===g)for(var x=0;x<c.length;x++){var P=[];v(c[x],P,e,o,r,!0),P.length&&M.push(P)}if(M.length){if(l.lineMetrics&&"LineString"===g){for(x=0;x<M.length;x++)u.push(i(f.id,g,M[x],f.tags));continue}"LineString"!==g&&"MultiLineString"!==g||(1===M.length?(g="LineString",M=M[0]):g="MultiLineString"),"Point"!==g&&"MultiPoint"!==g||(g=3===M.length?"Point":"MultiPoint"),u.push(i(f.id,g,M,f.tags))}}}return u.length?u:null}function d(t,n,e,o,r){for(var i=0;i<t.length;i+=3){var a=t[i+r];a>=e&&a<=o&&(n.push(t[i]),n.push(t[i+1]),n.push(t[i+2]))}}function p(t,n,e,o,r,i,a){for(var s,l,u=m(t),h=0===r?M:x,f=t.start,c=0;c<t.length-3;c+=3){var g=t[c],d=t[c+1],p=t[c+2],v=t[c+3],P=t[c+4],b=0===r?g:d,w=0===r?v:P,I=!1;a&&(s=Math.sqrt(Math.pow(g-v,2)+Math.pow(d-P,2))),b<e?w>e&&(l=h(u,g,d,v,P,e),a&&(u.start=f+s*l)):b>o?w<o&&(l=h(u,g,d,v,P,o),a&&(u.start=f+s*l)):y(u,g,d,p),w<e&&b>=e&&(l=h(u,g,d,v,P,e),I=!0),w>o&&b<=o&&(l=h(u,g,d,v,P,o),I=!0),!i&&I&&(a&&(u.end=f+s*l),n.push(u),u=m(t)),a&&(f+=s)}var S=t.length-3;g=t[S],d=t[S+1],p=t[S+2],(b=0===r?g:d)>=e&&b<=o&&y(u,g,d,p),S=u.length-3,i&&S>=3&&(u[S]!==u[0]||u[S+1]!==u[1])&&y(u,u[0],u[1],u[2]),u.length&&n.push(u)}function m(t){var n=[];return n.size=t.size,n.start=t.start,n.end=t.end,n}function v(t,n,e,o,r,i){for(var a=0;a<t.length;a++)p(t[a],n,e,o,r,i,!1)}function y(t,n,e,o){t.push(n),t.push(e),t.push(o)}function M(t,n,e,o,r,i){var a=(i-n)/(o-n);return t.push(i),t.push(e+(r-e)*a),t.push(1),a}function x(t,n,e,o,r,i){var a=(i-e)/(r-e);return t.push(n+(o-n)*a),t.push(i),t.push(1),a}function P(t,n){for(var e=[],o=0;o<t.length;o++){var r,a=t[o],s=a.type;if("Point"===s||"MultiPoint"===s||"LineString"===s)r=b(a.geometry,n);else if("MultiLineString"===s||"Polygon"===s){r=[];for(var l=0;l<a.geometry.length;l++)r.push(b(a.geometry[l],n))}else if("MultiPolygon"===s)for(r=[],l=0;l<a.geometry.length;l++){for(var u=[],h=0;h<a.geometry[l].length;h++)u.push(b(a.geometry[l][h],n));r.push(u)}e.push(i(a.id,s,r,a.tags))}return e}function b(t,n){var e=[];e.size=t.size,void 0!==t.start&&(e.start=t.start,e.end=t.end);for(var o=0;o<t.length;o+=3)e.push(t[o]+n,t[o+1],t[o+2]);return e}function w(t,n){if(t.transformed)return t;var e,o,r,i=1<<t.z,a=t.x,s=t.y;for(e=0;e<t.features.length;e++){var l=t.features[e],u=l.geometry,h=l.type;if(l.geometry=[],1===h)for(o=0;o<u.length;o+=2)l.geometry.push(I(u[o],u[o+1],n,i,a,s));else for(o=0;o<u.length;o++){var f=[];for(r=0;r<u[o].length;r+=2)f.push(I(u[o][r],u[o][r+1],n,i,a,s));l.geometry.push(f)}}return t.transformed=!0,t}function I(t,n,e,o,r,i){return[Math.round(e*(t*o-r)),Math.round(e*(n*o-i))]}function S(t,n,e,o,r){for(var i=n===r.maxZoom?0:r.tolerance/((1<<n)*r.extent),a={features:[],numPoints:0,numSimplified:0,numFeatures:0,source:null,x:e,y:o,z:n,transformed:!1,minX:2,minY:1,maxX:-1,maxY:0},s=0;s<t.length;s++){a.numFeatures++,Y(a,t[s],i,r);var l=t[s].minX,u=t[s].minY,h=t[s].maxX,f=t[s].maxY;l<a.minX&&(a.minX=l),u<a.minY&&(a.minY=u),h>a.maxX&&(a.maxX=h),f>a.maxY&&(a.maxY=f)}return a}function Y(t,n,e,o){var r=n.geometry,i=n.type,a=[];if("Point"===i||"MultiPoint"===i)for(var s=0;s<r.length;s+=3)a.push(r[s]),a.push(r[s+1]),t.numPoints++,t.numSimplified++;else if("LineString"===i)T(a,r,t,e,!1,!1);else if("MultiLineString"===i||"Polygon"===i)for(s=0;s<r.length;s++)T(a,r[s],t,e,"Polygon"===i,0===s);else if("MultiPolygon"===i)for(var l=0;l<r.length;l++){var u=r[l];for(s=0;s<u.length;s++)T(a,u[s],t,e,!0,0===s)}if(a.length){var h=n.tags||null;if("LineString"===i&&o.lineMetrics){for(var f in h={},n.tags)h[f]=n.tags[f];h.mapbox_clip_start=r.start/r.size,h.mapbox_clip_end=r.end/r.size}var c={geometry:a,type:"Polygon"===i||"MultiPolygon"===i?3:"LineString"===i||"MultiLineString"===i?2:1,tags:h};null!==n.id&&(c.id=n.id),t.features.push(c)}}function T(t,n,e,o,r,i){var a=o*o;if(o>0&&n.size<(r?a:o))e.numPoints+=n.length/3;else{for(var s=[],l=0;l<n.length;l+=3)(0===o||n[l+2]>a)&&(e.numSimplified++,s.push(n[l]),s.push(n[l+1])),e.numPoints++;r&&function(t,n){for(var e=0,o=0,r=t.length,i=r-2;o<r;i=o,o+=2)e+=(t[o]-t[i])*(t[o+1]+t[i+1]);if(e>0===n)for(o=0,r=t.length;o<r/2;o+=2){var a=t[o],s=t[o+1];t[o]=t[r-2-o],t[o+1]=t[r-1-o],t[r-2-o]=a,t[r-1-o]=s}}(s,i),t.push(s)}}function L(t,n){var e=(n=this.options=function(t,n){for(var e in n)t[e]=n[e];return t}(Object.create(this.options),n)).debug;if(e&&console.time("preprocess data"),n.maxZoom<0||n.maxZoom>24)throw new Error("maxZoom should be in the 0-24 range");if(n.promoteId&&n.generateId)throw new Error("promoteId and generateId cannot be used together.");var o=function(t,n){var e=[];if("FeatureCollection"===t.type)for(var o=0;o<t.features.length;o++)s(e,t.features[o],n,o);else"Feature"===t.type?s(e,t,n):s(e,{geometry:t},n);return e}(t,n);this.tiles={},this.tileCoords=[],e&&(console.timeEnd("preprocess data"),console.log("index: maxZoom: %d, maxPoints: %d",n.indexMaxZoom,n.indexMaxPoints),console.time("generate tiles"),this.stats={},this.total=0),o=function(t,n){var e=n.buffer/n.extent,o=t,r=g(t,1,-1-e,e,0,-1,2,n),i=g(t,1,1-e,2+e,0,-1,2,n);return(r||i)&&(o=g(t,1,-e,1+e,0,-1,2,n)||[],r&&(o=P(r,1).concat(o)),i&&(o=o.concat(P(i,-1)))),o}(o,n),o.length&&this.splitTile(o,0,0,0),e&&(o.length&&console.log("features: %d, points: %d",this.tiles[0].numFeatures,this.tiles[0].numPoints),console.timeEnd("generate tiles"),console.log("tiles generated:",this.total,JSON.stringify(this.stats)))}function X(t,n,e){return 32*((1<<t)*e+n)+t}L.prototype.options={maxZoom:14,indexMaxZoom:5,indexMaxPoints:1e5,tolerance:3,extent:4096,buffer:64,lineMetrics:!1,promoteId:null,generateId:!1,debug:0},L.prototype.splitTile=function(t,n,e,o,r,i,a){for(var s=[t,n,e,o],l=this.options,u=l.debug;s.length;){o=s.pop(),e=s.pop(),n=s.pop(),t=s.pop();var h=1<<n,f=X(n,e,o),c=this.tiles[f];if(!c&&(u>1&&console.time("creation"),c=this.tiles[f]=S(t,n,e,o,l),this.tileCoords.push({z:n,x:e,y:o}),u)){u>1&&(console.log("tile z%d-%d-%d (features: %d, points: %d, simplified: %d)",n,e,o,c.numFeatures,c.numPoints,c.numSimplified),console.timeEnd("creation"));var d="z"+n;this.stats[d]=(this.stats[d]||0)+1,this.total++}if(c.source=t,r){if(n===l.maxZoom||n===r)continue;var p=1<<r-n;if(e!==Math.floor(i/p)||o!==Math.floor(a/p))continue}else if(n===l.indexMaxZoom||c.numPoints<=l.indexMaxPoints)continue;if(c.source=null,0!==t.length){u>1&&console.time("clipping");var m,v,y,M,x,P,b=.5*l.buffer/l.extent,w=.5-b,I=.5+b,Y=1+b;m=v=y=M=null,x=g(t,h,e-b,e+I,0,c.minX,c.maxX,l),P=g(t,h,e+w,e+Y,0,c.minX,c.maxX,l),t=null,x&&(m=g(x,h,o-b,o+I,1,c.minY,c.maxY,l),v=g(x,h,o+w,o+Y,1,c.minY,c.maxY,l),x=null),P&&(y=g(P,h,o-b,o+I,1,c.minY,c.maxY,l),M=g(P,h,o+w,o+Y,1,c.minY,c.maxY,l),P=null),u>1&&console.timeEnd("clipping"),s.push(m||[],n+1,2*e,2*o),s.push(v||[],n+1,2*e,2*o+1),s.push(y||[],n+1,2*e+1,2*o),s.push(M||[],n+1,2*e+1,2*o+1)}}},L.prototype.getTile=function(t,n,e){var o=this.options,r=o.extent,i=o.debug;if(t<0||t>24)return null;var a=1<<t,s=X(t,n=(n%a+a)%a,e);if(this.tiles[s])return w(this.tiles[s],r);i>1&&console.log("drilling down to z%d-%d-%d",t,n,e);for(var l,u=t,h=n,f=e;!l&&u>0;)u--,h=Math.floor(h/2),f=Math.floor(f/2),l=this.tiles[X(u,h,f)];return l&&l.source?(i>1&&console.log("found parent tile z%d-%d-%d",u,h,f),i>1&&console.time("drilling down"),this.splitTile(l.source,u,h,f,t,n,e),i>1&&console.timeEnd("drilling down"),this.tiles[s]?w(this.tiles[s],r):null):null};var z=null,R=null,Z=function(){let t=null;const n=new Promise((n=>{t=n}));return{wait:()=>n,set:t}}(),k={};const E=2*Math.PI;function C(t,e){"number"===typeof t.lat&&(t=[t.lng,t.lat]);const o=e.features,r=o.length,i={type:"Point",coordinates:t};for(let a=0;a<r;a++)if(n().pointInPolygon(i,o[a].geometry))return o[a]}function D(t,n){var e;const o=n.type,r=n.geometry,i=r.length,a=1/16;switch(t.beginPath(),function(t){var n,e,o;t.lineWidth=null!==(n=k.weight)&&void 0!==n?n:2,t.fillStyle=null!==(e=k.fillColor)&&void 0!==e?e:"pink",t.strokeStyle=null!==(o=k.color)&&void 0!==o?o:"cyan"}(t),o){case 1:for(let n=0;n<i;n++){var s;t.arc(r[n][0]*a,r[n][1]*a,null!==(s=k.radius)&&void 0!==s?s:2,0,E,!0)}break;case 2:case 3:for(let n=0;n<i;n++){const e=r[n],o=e.length;o>0&&t.moveTo(e[0][0]*a,e[0][1]*a);for(let n=1;n<o;n++)t.lineTo(e[n][0]*a,e[n][1]*a)}}1!==o&&3!==o||t.fill(null!==(e=k.fillRule)&&void 0!==e?e:"evenodd"),t.stroke()}self.addEventListener("message",(t=>{const n=t.data;!function(t,n){switch(t){case"init":var e;!async function(t,n){const e=await fetch(t),o=await e.json();z=o,R=function(t,n){return new L(t,n)}(o,n),Z.set()}(n.url,n.vtOptions),k=null!==(e=n.style)&&void 0!==e?e:{};break;case"tile":!async function(t,n){var e;await Z.wait();const o=t.getContext("2d"),{x:r,y:i,z:a}=n,s=R.getTile(a,r,i),l=null!==(e=null===s||void 0===s?void 0:s.features)&&void 0!==e?e:[];!function(t,n){for(let e=0;e<n.length;e++)D(t,n[e])}(o,l)}(n.canvas,n.coords);break;case"click":(function(t,n){self.postMessage({type:t,data:n})})("click",{feature:C(o=n.latlng,z),latlng:o});break;default:console.warn("Ignored event type: ".concat(t))}var o}(n.type,n.data)}))})()})();
//# sourceMappingURL=474.4c85469f.chunk.js.map