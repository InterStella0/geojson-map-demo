{"version":3,"file":"static/js/474.51d99620.chunk.js","mappings":"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","sources":["../node_modules/geojson-utils/geojson-utils.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../node_modules/geojson-vt/src/simplify.js","../node_modules/geojson-vt/src/feature.js","../node_modules/geojson-vt/src/convert.js","../node_modules/geojson-vt/src/clip.js","../node_modules/geojson-vt/src/wrap.js","../node_modules/geojson-vt/src/transform.js","../node_modules/geojson-vt/src/tile.js","../node_modules/geojson-vt/src/index.js","workers/GeoJSONLayer.worker.js"],"sourcesContent":["(function () {\n  var gju = this.gju = {};\n\n  // Export the geojson object for **CommonJS**\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = gju;\n  }\n\n  // adapted from http://www.kevlindev.com/gui/math/intersection/Intersection.js\n  gju.lineStringsIntersect = function (l1, l2) {\n    var intersects = [];\n    for (var i = 0; i <= l1.coordinates.length - 2; ++i) {\n      for (var j = 0; j <= l2.coordinates.length - 2; ++j) {\n        var a1 = {\n          x: l1.coordinates[i][1],\n          y: l1.coordinates[i][0]\n        },\n          a2 = {\n            x: l1.coordinates[i + 1][1],\n            y: l1.coordinates[i + 1][0]\n          },\n          b1 = {\n            x: l2.coordinates[j][1],\n            y: l2.coordinates[j][0]\n          },\n          b2 = {\n            x: l2.coordinates[j + 1][1],\n            y: l2.coordinates[j + 1][0]\n          },\n          ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n          ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n          u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n        if (u_b != 0) {\n          var ua = ua_t / u_b,\n            ub = ub_t / u_b;\n          if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n            intersects.push({\n              'type': 'Point',\n              'coordinates': [a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)]\n            });\n          }\n        }\n      }\n    }\n    if (intersects.length == 0) intersects = false;\n    return intersects;\n  }\n\n  // Bounding Box\n\n  function boundingBoxAroundPolyCoords (coords) {\n    var xAll = [], yAll = []\n\n    for (var i = 0; i < coords[0].length; i++) {\n      xAll.push(coords[0][i][1])\n      yAll.push(coords[0][i][0])\n    }\n\n    xAll = xAll.sort(function (a,b) { return a - b })\n    yAll = yAll.sort(function (a,b) { return a - b })\n\n    return [ [xAll[0], yAll[0]], [xAll[xAll.length - 1], yAll[yAll.length - 1]] ]\n  }\n\n  gju.pointInBoundingBox = function (point, bounds) {\n    return !(point.coordinates[1] < bounds[0][0] || point.coordinates[1] > bounds[1][0] || point.coordinates[0] < bounds[0][1] || point.coordinates[0] > bounds[1][1]) \n  }\n\n  // Point in Polygon\n  // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html#Listing the Vertices\n\n  function pnpoly (x,y,coords) {\n    var vert = [ [0,0] ]\n\n    for (var i = 0; i < coords.length; i++) {\n      for (var j = 0; j < coords[i].length; j++) {\n        vert.push(coords[i][j])\n      }\n\t  vert.push(coords[i][0])\n      vert.push([0,0])\n    }\n\n    var inside = false\n    for (var i = 0, j = vert.length - 1; i < vert.length; j = i++) {\n      if (((vert[i][0] > y) != (vert[j][0] > y)) && (x < (vert[j][1] - vert[i][1]) * (y - vert[i][0]) / (vert[j][0] - vert[i][0]) + vert[i][1])) inside = !inside\n    }\n\n    return inside\n  }\n\n  gju.pointInPolygon = function (p, poly) {\n    var coords = (poly.type == \"Polygon\") ? [ poly.coordinates ] : poly.coordinates\n\n    var insideBox = false\n    for (var i = 0; i < coords.length; i++) {\n      if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[i]))) insideBox = true\n    }\n    if (!insideBox) return false\n\n    var insidePoly = false\n    for (var i = 0; i < coords.length; i++) {\n      if (pnpoly(p.coordinates[1], p.coordinates[0], coords[i])) insidePoly = true\n    }\n\n    return insidePoly\n  }\n\n  // support multi (but not donut) polygons\n  gju.pointInMultiPolygon = function (p, poly) {\n    var coords_array = (poly.type == \"MultiPolygon\") ? [ poly.coordinates ] : poly.coordinates\n\n    var insideBox = false\n    var insidePoly = false\n    for (var i = 0; i < coords_array.length; i++){\n      var coords = coords_array[i];\n      for (var j = 0; j < coords.length; j++) {\n        if (!insideBox){\n          if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[j]))) {\n            insideBox = true\n          }\n        }\n      }\n      if (!insideBox) return false\n      for (var j = 0; j < coords.length; j++) {\n        if (!insidePoly){\n          if (pnpoly(p.coordinates[1], p.coordinates[0], coords[j])) {\n            insidePoly = true\n          }\n        }\n      }\n    }\n\n    return insidePoly\n  }\n\n  gju.numberToRadius = function (number) {\n    return number * Math.PI / 180;\n  }\n\n  gju.numberToDegree = function (number) {\n    return number * 180 / Math.PI;\n  }\n\n  // written with help from @tautologe\n  gju.drawCircle = function (radiusInMeters, centerPoint, steps) {\n    var center = [centerPoint.coordinates[1], centerPoint.coordinates[0]],\n      dist = (radiusInMeters / 1000) / 6371,\n      // convert meters to radiant\n      radCenter = [gju.numberToRadius(center[0]), gju.numberToRadius(center[1])],\n      steps = steps || 15,\n      // 15 sided circle\n      poly = [[center[0], center[1]]];\n    for (var i = 0; i < steps; i++) {\n      var brng = 2 * Math.PI * i / steps;\n      var lat = Math.asin(Math.sin(radCenter[0]) * Math.cos(dist)\n              + Math.cos(radCenter[0]) * Math.sin(dist) * Math.cos(brng));\n      var lng = radCenter[1] + Math.atan2(Math.sin(brng) * Math.sin(dist) * Math.cos(radCenter[0]),\n                                          Math.cos(dist) - Math.sin(radCenter[0]) * Math.sin(lat));\n      poly[i] = [];\n      poly[i][1] = gju.numberToDegree(lat);\n      poly[i][0] = gju.numberToDegree(lng);\n    }\n    return {\n      \"type\": \"Polygon\",\n      \"coordinates\": [poly]\n    };\n  }\n\n  // assumes rectangle starts at lower left point\n  gju.rectangleCentroid = function (rectangle) {\n    var bbox = rectangle.coordinates[0];\n    var xmin = bbox[0][0],\n      ymin = bbox[0][1],\n      xmax = bbox[2][0],\n      ymax = bbox[2][1];\n    var xwidth = xmax - xmin;\n    var ywidth = ymax - ymin;\n    return {\n      'type': 'Point',\n      'coordinates': [xmin + xwidth / 2, ymin + ywidth / 2]\n    };\n  }\n\n  // from http://www.movable-type.co.uk/scripts/latlong.html\n  gju.pointDistance = function (pt1, pt2) {\n    var lon1 = pt1.coordinates[0],\n      lat1 = pt1.coordinates[1],\n      lon2 = pt2.coordinates[0],\n      lat2 = pt2.coordinates[1],\n      dLat = gju.numberToRadius(lat2 - lat1),\n      dLon = gju.numberToRadius(lon2 - lon1),\n      a = Math.pow(Math.sin(dLat / 2), 2) + Math.cos(gju.numberToRadius(lat1))\n        * Math.cos(gju.numberToRadius(lat2)) * Math.pow(Math.sin(dLon / 2), 2),\n      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return (6371 * c) * 1000; // returns meters\n  },\n\n  // checks if geometry lies entirely within a circle\n  // works with Point, LineString, Polygon\n  gju.geometryWithinRadius = function (geometry, center, radius) {\n    if (geometry.type == 'Point') {\n      return gju.pointDistance(geometry, center) <= radius;\n    } else if (geometry.type == 'LineString' || geometry.type == 'Polygon') {\n      var point = {};\n      var coordinates;\n      if (geometry.type == 'Polygon') {\n        // it's enough to check the exterior ring of the Polygon\n        coordinates = geometry.coordinates[0];\n      } else {\n        coordinates = geometry.coordinates;\n      }\n      for (var i in coordinates) {\n        point.coordinates = coordinates[i];\n        if (gju.pointDistance(point, center) > radius) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.area = function (polygon) {\n    var area = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      area += p1.x * p2.y;\n      area -= p1.y * p2.x;\n    }\n\n    area /= 2;\n    return area;\n  },\n\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.centroid = function (polygon) {\n    var f, x = 0,\n      y = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      f = p1.x * p2.y - p2.x * p1.y;\n      x += (p1.x + p2.x) * f;\n      y += (p1.y + p2.y) * f;\n    }\n\n    f = gju.area(polygon) * 6;\n    return {\n      'type': 'Point',\n      'coordinates': [y / f, x / f]\n    };\n  },\n\n  gju.simplify = function (source, kink) { /* source[] array of geojson points */\n    /* kink\tin metres, kinks above this depth kept  */\n    /* kink depth is the height of the triangle abc where a-b and b-c are two consecutive line segments */\n    kink = kink || 20;\n    source = source.map(function (o) {\n      return {\n        lng: o.coordinates[0],\n        lat: o.coordinates[1]\n      }\n    });\n\n    var n_source, n_stack, n_dest, start, end, i, sig;\n    var dev_sqr, max_dev_sqr, band_sqr;\n    var x12, y12, d12, x13, y13, d13, x23, y23, d23;\n    var F = (Math.PI / 180.0) * 0.5;\n    var index = new Array(); /* aray of indexes of source points to include in the reduced line */\n    var sig_start = new Array(); /* indices of start & end of working section */\n    var sig_end = new Array();\n\n    /* check for simple cases */\n\n    if (source.length < 3) return (source); /* one or two points */\n\n    /* more complex case. initialize stack */\n\n    n_source = source.length;\n    band_sqr = kink * 360.0 / (2.0 * Math.PI * 6378137.0); /* Now in degrees */\n    band_sqr *= band_sqr;\n    n_dest = 0;\n    sig_start[0] = 0;\n    sig_end[0] = n_source - 1;\n    n_stack = 1;\n\n    /* while the stack is not empty  ... */\n    while (n_stack > 0) {\n\n      /* ... pop the top-most entries off the stacks */\n\n      start = sig_start[n_stack - 1];\n      end = sig_end[n_stack - 1];\n      n_stack--;\n\n      if ((end - start) > 1) { /* any intermediate points ? */\n\n        /* ... yes, so find most deviant intermediate point to\n        either side of line joining start & end points */\n\n        x12 = (source[end].lng() - source[start].lng());\n        y12 = (source[end].lat() - source[start].lat());\n        if (Math.abs(x12) > 180.0) x12 = 360.0 - Math.abs(x12);\n        x12 *= Math.cos(F * (source[end].lat() + source[start].lat())); /* use avg lat to reduce lng */\n        d12 = (x12 * x12) + (y12 * y12);\n\n        for (i = start + 1, sig = start, max_dev_sqr = -1.0; i < end; i++) {\n\n          x13 = source[i].lng() - source[start].lng();\n          y13 = source[i].lat() - source[start].lat();\n          if (Math.abs(x13) > 180.0) x13 = 360.0 - Math.abs(x13);\n          x13 *= Math.cos(F * (source[i].lat() + source[start].lat()));\n          d13 = (x13 * x13) + (y13 * y13);\n\n          x23 = source[i].lng() - source[end].lng();\n          y23 = source[i].lat() - source[end].lat();\n          if (Math.abs(x23) > 180.0) x23 = 360.0 - Math.abs(x23);\n          x23 *= Math.cos(F * (source[i].lat() + source[end].lat()));\n          d23 = (x23 * x23) + (y23 * y23);\n\n          if (d13 >= (d12 + d23)) dev_sqr = d23;\n          else if (d23 >= (d12 + d13)) dev_sqr = d13;\n          else dev_sqr = (x13 * y12 - y13 * x12) * (x13 * y12 - y13 * x12) / d12; // solve triangle\n          if (dev_sqr > max_dev_sqr) {\n            sig = i;\n            max_dev_sqr = dev_sqr;\n          }\n        }\n\n        if (max_dev_sqr < band_sqr) { /* is there a sig. intermediate point ? */\n          /* ... no, so transfer current start point */\n          index[n_dest] = start;\n          n_dest++;\n        } else { /* ... yes, so push two sub-sections on stack for further processing */\n          n_stack++;\n          sig_start[n_stack - 1] = sig;\n          sig_end[n_stack - 1] = end;\n          n_stack++;\n          sig_start[n_stack - 1] = start;\n          sig_end[n_stack - 1] = sig;\n        }\n      } else { /* ... no intermediate points, so transfer current start point */\n        index[n_dest] = start;\n        n_dest++;\n      }\n    }\n\n    /* transfer last point */\n    index[n_dest] = n_source - 1;\n    n_dest++;\n\n    /* make return array */\n    var r = new Array();\n    for (var i = 0; i < n_dest; i++)\n      r.push(source[index[i]]);\n\n    return r.map(function (o) {\n      return {\n        type: \"Point\",\n        coordinates: [o.lng, o.lat]\n      }\n    });\n  }\n\n  // http://www.movable-type.co.uk/scripts/latlong.html#destPoint\n  gju.destinationPoint = function (pt, brng, dist) {\n    dist = dist/6371;  // convert dist to angular distance in radians\n    brng = gju.numberToRadius(brng);\n\n    var lon1 = gju.numberToRadius(pt.coordinates[0]);\n    var lat1 = gju.numberToRadius(pt.coordinates[1]);\n\n    var lat2 = Math.asin( Math.sin(lat1)*Math.cos(dist) +\n                          Math.cos(lat1)*Math.sin(dist)*Math.cos(brng) );\n    var lon2 = lon1 + Math.atan2(Math.sin(brng)*Math.sin(dist)*Math.cos(lat1),\n                                 Math.cos(dist)-Math.sin(lat1)*Math.sin(lat2));\n    lon2 = (lon2+3*Math.PI) % (2*Math.PI) - Math.PI;  // normalise to -180..+180º\n\n    return {\n      'type': 'Point',\n      'coordinates': [gju.numberToDegree(lon2), gju.numberToDegree(lat2)]\n    };\n  };\n\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n","import geojsonUtils from \"geojson-utils\";\r\nimport geojsonvt from \"geojson-vt\";\r\n\r\n\r\nvar originalData = null\r\nvar mappedVectorTile = null\r\nvar waitForFetch = waitFor()\r\nvar styleSet = {}\r\nconst FULL_CIRCLE = 2 * Math.PI  // 360 deg\r\n// eslint-disable-next-line no-restricted-globals\r\nself.addEventListener('message', e => {\r\n    const received = e.data\r\n    processMessage(received.type, received.data)\r\n})\r\n\r\nfunction waitFor(){\r\n    let resolver = null\r\n    const waiter = new Promise((resolve) => {\r\n        resolver = resolve\r\n    })\r\n    return {\r\n        wait: () => waiter,\r\n        set: resolver\r\n    }\r\n}\r\nfunction processMessage(type, data){\r\n    switch(type){\r\n        case 'init':{\r\n            fetchingJson(data.url, data.vtOptions)\r\n            styleSet = data.style ?? {}\r\n            break;\r\n        }case 'tile':\r\n            handleTile(data.canvas, data.coords)\r\n            break;\r\n        case 'hover':\r\n        case 'click':\r\n            if (!originalData)\r\n                return\r\n            handleClickOrHover(data.latlng, type)\r\n            break;\r\n        default:\r\n            console.warn(`Ignored event type: ${type}`)\r\n            break;\r\n    }\r\n}\r\nfunction isLineIntersectPoint(point, linestring){\r\n    const deviation = .01\r\n    const centerPoint = point.coordinates\r\n    let coordinates = [linestring.coordinates]\r\n    if (linestring.type === \"MultiLineString\")\r\n        coordinates = coordinates[0]\r\n    const pointLineString = {\r\n        \"type\": \"LineString\",\r\n        \"coordinates\": [\r\n          [centerPoint[0], centerPoint[1]], // Center point\r\n          [centerPoint[0], centerPoint[1] + deviation], // Up\r\n          [centerPoint[0], centerPoint[1] - deviation], // Down\r\n          [centerPoint[0] + deviation, centerPoint[1]], // Right\r\n          [centerPoint[0] - deviation, centerPoint[1]]  // Left\r\n        ]\r\n    }\r\n    for(let i = 0; i < coordinates.length; i++){\r\n        const line = {\r\n            type: 'LineString',\r\n            coordinates: coordinates[i]\r\n        }\r\n        if (geojsonUtils.lineStringsIntersect(line, pointLineString))\r\n            return true\r\n    }\r\n    return false\r\n\r\n}\r\nfunction pointToGeoJSON(p, geojson) { // Copied from leafletPip but modified\r\n    // This function is intended to only support singular type, i.e you cannot mix Point and Linestring in a \r\n    // single geojson featurecollection.\r\n    if (typeof p.lat === 'number')\r\n        p = [p.lng, p.lat];\r\n\r\n    const features = geojson.features\r\n    const maxLength = features.length\r\n    const point = {\r\n        type: 'Point',\r\n        coordinates: p\r\n    }\r\n    const radius = 1000\r\n    const geomType = maxLength > 0? features[0].geometry?.type: 'empty'\r\n    switch(geomType.toLowerCase()){\r\n        case 'multipolygon':\r\n        case 'polygon':\r\n            for(let i = 0; i < maxLength; i++){\r\n                if (geojsonUtils.pointInPolygon(point, features[i].geometry))\r\n                    return features[i]\r\n            }\r\n            break\r\n        case 'multilinestring':\r\n        case 'linestring':\r\n            for(let i = 0; i < maxLength; i++){\r\n                if (isLineIntersectPoint(point, features[i].geometry, radius))\r\n                    return features[i]\r\n            }\r\n            break;\r\n        case 'multipoint':\r\n        case 'point':\r\n            for(let i = 0; i < maxLength; i++){\r\n                if (geojsonUtils.pointDistance(point, features[i].geometry) <= radius)\r\n                    return features[i]\r\n            }\r\n            break;\r\n        default:\r\n            console.warn(\"unknown type: \", geomType)\r\n            break\r\n    }\r\n\r\n\r\n    \r\n}\r\nfunction handleClickOrHover(latlng, type){\r\n    const json = pointToGeoJSON(latlng, originalData)\r\n    post(type, {feature: json, latlng})\r\n}\r\nasync function fetchingJson(url, options){\r\n    const data = await fetch(url)\r\n    const geojson = await data.json()\r\n    originalData = geojson\r\n    mappedVectorTile = geojsonvt(geojson, options)\r\n    waitForFetch.set()\r\n}\r\nasync function handleTile(canvas, coords){\r\n    await waitForFetch.wait()\r\n    const ctx = canvas.getContext(\"2d\")\r\n    const { x, y, z } = coords\r\n    const tile = mappedVectorTile.getTile(z, x, y)\r\n    const features = tile?.features?? []\r\n    renderTile(ctx, features)\r\n}\r\n\r\nfunction renderTile(ctx, features){\r\n    for(let i = 0; i < features.length; i++)\r\n        featureDraw(ctx, features[i])\r\n}\r\nfunction featureDraw(ctx, feature){\r\n    const type = feature.type\r\n    const geometries = feature.geometry\r\n    const maxLength = geometries.length\r\n    const ratio = 1 / 16\r\n    ctx.beginPath()\r\n    setStyle(ctx)\r\n    switch(type){\r\n        case 1:\r\n            for (let i = 0; i < maxLength; i++)\r\n                ctx.arc(geometries[i][0] * ratio, geometries[i][1] * ratio, styleSet.radius ?? 2, 0, FULL_CIRCLE, true)\r\n            break\r\n        case 2:\r\n        case 3:\r\n            for (let i = 0; i < maxLength; i++){\r\n                const rings = geometries[i]\r\n                const maxRingLength = rings.length\r\n                if (maxRingLength > 0)\r\n                    ctx.moveTo(rings[0][0] * ratio, rings[0][1] * ratio)\r\n        \r\n                for(let j = 1; j < maxRingLength; j++)\r\n                    ctx.lineTo(rings[j][0] * ratio, rings[j][1] * ratio)\r\n            }\r\n            break\r\n        default:\r\n            break\r\n    }\r\n    if (type === 1 || type === 3)\r\n        ctx.fill(styleSet.fillRule ?? 'evenodd')\r\n\r\n    \r\n    ctx.stroke()\r\n\r\n}\r\nfunction setStyle(ctx){\r\n    ctx.lineWidth = styleSet.weight ?? 2\r\n    ctx.fillStyle = styleSet.fillColor ?? 'pink'\r\n    ctx.strokeStyle = styleSet.color ?? 'cyan'\r\n}\r\n\r\nfunction post(type, data){\r\n    // eslint-disable-next-line no-restricted-globals\r\n    self.postMessage({type, data})\r\n}"],"names":["gju","this","boundingBoxAroundPolyCoords","coords","xAll","yAll","i","length","push","sort","a","b","pnpoly","x","y","vert","j","inside","module","exports","lineStringsIntersect","l1","l2","intersects","coordinates","a1","a2","b1","b2","u_b","ua","ub","pointInBoundingBox","point","bounds","pointInPolygon","p","poly","type","insideBox","insidePoly","pointInMultiPolygon","coords_array","numberToRadius","number","Math","PI","numberToDegree","drawCircle","radiusInMeters","centerPoint","steps","center","dist","radCenter","brng","lat","asin","sin","cos","lng","atan2","rectangleCentroid","rectangle","bbox","xmin","ymin","pointDistance","pt1","pt2","lon1","lat1","lon2","lat2","dLat","dLon","pow","sqrt","geometryWithinRadius","geometry","radius","area","polygon","points","p1","p2","centroid","f","simplify","source","kink","n_source","n_stack","n_dest","start","end","sig","dev_sqr","max_dev_sqr","band_sqr","x12","y12","d12","x13","y13","d13","x23","y23","d23","map","o","F","index","Array","sig_start","sig_end","abs","r","destinationPoint","pt","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","key","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","first","last","sqTolerance","maxSqDist","mid","minPosToMid","ax","ay","bx","by","getSqSegDist","posToMid","px","py","dx","dy","t","createFeature","id","geom","tags","feature","minX","Infinity","minY","maxX","maxY","calcLineBBox","calcBBox","min","max","convertFeature","features","geojson","options","tolerance","maxZoom","extent","promoteId","properties","generateId","convertPoint","convertLine","lineMetrics","convertLines","geometries","Error","out","projectX","projectY","ring","isPolygon","x0","y0","size","rings","y2","log","clip","scale","k1","k2","axis","minAll","maxAll","clipped","newGeometry","clipPoints","clipLine","clipLines","newGeom","trackMetrics","segLen","slice","newSlice","intersect","intersectX","intersectY","len","az","exited","addPoint","line","z","shiftFeatureCoords","offset","newFeatures","shiftCoords","newPolygon","k","newPoints","transformTile","tile","transformed","z2","tx","ty","transformPoint","round","createTile","numPoints","numSimplified","numFeatures","addFeature","simplified","addLine","tileFeature","result","isOuter","clockwise","rewind","GeoJSONVT","data","debug","dest","src","extend","create","console","time","convert","tiles","tileCoords","timeEnd","indexMaxZoom","indexMaxPoints","stats","total","buffer","merged","left","right","concat","wrap","splitTile","JSON","stringify","toID","cz","cx","cy","stack","pop","m","floor","tl","bl","tr","br","k3","k4","getTile","transform","parent","z0","originalData","mappedVectorTile","waitForFetch","resolver","waiter","Promise","resolve","wait","set","waitFor","styleSet","FULL_CIRCLE","isLineIntersectPoint","linestring","deviation","pointLineString","geojsonUtils","featureDraw","ctx","_styleSet$fillRule","maxLength","ratio","beginPath","_styleSet$weight","_styleSet$fillColor","_styleSet$color","lineWidth","weight","fillStyle","fillColor","strokeStyle","color","setStyle","_styleSet$radius","arc","maxRingLength","moveTo","lineTo","fill","fillRule","stroke","self","addEventListener","e","received","_data$style","async","url","fetch","json","geojsonvt","fetchingJson","vtOptions","style","canvas","_tile$features","getContext","renderTile","handleTile","latlng","_features$0$geometry","geomType","toLowerCase","warn","pointToGeoJSON","postMessage","post","handleClickOrHover","processMessage"],"sourceRoot":""}